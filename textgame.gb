declare "!",printf(fmt:char*, ...),int
declare "!",scanf(fmt:char*, ...),int
declare "!",malloc(n:uint64),pointer
declare "!",free(p:pointer)
declare "!",getchar(),int
declare "!",strcmp(s:char*, o:char*),int
declare "!",memcmp(a:pointer, b:pointer, n:uint64),int
declare "!",strlen(s:char*),uint64

'' -----------------------------------------------------------

'' variables
def false,true:bool : true=1
def quitting:bool
def chararray[256]:char
def commandbuf:char* : commandbuf = &chararray[0]
const xmax = 3
const ymax = 3
def map[4,4]:int
def messages[4,4]:char*
def lookmsg[4,4]:char*
def myx, myy:int : myx = 1 : myy = 1

'' items and states
def inv:int
const dark = 1
const lantern = 2
const pitofspikes = 4
const cake = 8
const hungryguy = 16
const money = 32
const store = 64
const tissues = 128
const cryingguy = 256
const key = 512
const house = 1024

setupmap
setupmessages

'' main program

do
    msg ""
    if map[myy, myx] & dark
        msg "it's so dark you wonder if light even exists."
    else
        msg messages[myy, myx]
    endif
    ask
    process
until quitting

'' cleanup
'free commandbuf
end

'' ----------------------------------------------------------

sub msg(s:char*)
    printf "%s%c", s, 10
return

sub getln
    def c:int
    def i:int
    do
        c = getchar()
        commandbuf[i] = c
        i = i + 1
    until c = 10
    commandbuf[i-1] = 0
return

sub ask
    printf "> "
    getln
return

''-----------

sub process
    if strcmp(commandbuf, "quit") = 0
        quitting = true
    else if strcmp(commandbuf, "help") = 0
        help
    else if strcmp(commandbuf, "inventory") = 0
        inventory
    else if strcmp(commandbuf, "north") = 0
        gonorth
    else if strcmp(commandbuf, "east") = 0
        goeast
    else if strcmp(commandbuf, "south") = 0
        gosouth
    else if strcmp(commandbuf, "west") = 0
        gowest
    else if strcmp(commandbuf, "look") = 0
        look
    else if memcmp(commandbuf, "use ", 4) = 0
        tryuse &commandbuf[4]
    else if memcmp(commandbuf, "get ", 4) = 0
        tryget &commandbuf[4]
    else if memcmp(commandbuf, "take ", 5) = 0
        tryget &commandbuf[5]
    else
        msg "i didn't understand that command. try 'help' for a list of commands."
    endif
    
    if map[myy, myx] & pitofspikes
        msg "you got impaled on a pit of spikes so you kinda lose."
        quitting = true
    endif
return

sub look
    if myy > 0 then _
        lmsg("to the north", lookmsg[myy-1, myx]) _
    else _
        lmsginv("to the north")
        
    if myx < xmax then _
        lmsg("to the east", lookmsg[myy, myx+1]) _
    else _
        lmsginv("to the east")
    
    if myy < ymax then _
        lmsg("to the south", lookmsg[myy+1, myx]) _
    else _
        lmsginv("to the south")
    
    if myx > 0 then _
        lmsg("to the west", lookmsg[myy, myx-1]) _
    else _
        lmsginv("to the west")
return

sub lmsg(dir:char*, m:char*)
    printf "%s %s%c", dir, m, 10
return

sub lmsginv(dir:char*)
    printf "it appears you can't go %s.%c", dir, 10
return

sub getthingnr(thing:char*),int
    def nr:int
    if strcmp(thing, "lantern") = 0
        nr = lantern
    else if strcmp(thing, "cake") = 0
        nr = cake
    else if strcmp(thing, "money") = 0
        nr = money
    else if strcmp(thing, "tissues") = 0
        nr = tissues
    else if strcmp(thing, "key") = 0
        nr = key
    endif
return nr

sub tryuse(thing:char*)
    def nr:int
    def spot:int
    nr = getthingnr(thing)
    spot = map[myy, myx]
    if inv & nr
        if nr = lantern
            if spot & dark
                msg "aw yeah dawg it's so bright here now!"
                map[myy, myx] = spot - dark
                inv = inv - lantern
            else
                msg "that wouldn't do you any good!"
            endif
        
        else if nr = cake
            if spot & hungryguy
                messages[myy, myx] = _
                    "there's a guy here that's not really hungry anymore."
                msg "that guy is so happy he gave you some cash!"
                inv = inv - cake + money
            else
                msg "that wouldn't do you any good!"
            endif
            
        else if nr = money
            if spot & store
                messages[myy, myx] = _
                    "there's a store here! they're currently out of everything."
                msg "you got some awesome looking tissues for blowing yo nose!"
                inv = inv - money + tissues
            else
                msg "that wouldn't do you any good!"
            endif
            
        else if nr = tissues
            if spot & cryingguy
                messages[myy, myx] = _
                    "there's a happy guy with some tissues here."
                msg "he's so happy that he can blow his nose, he gave you your keys back!"
                inv = inv - tissues + key
            else
                msg "that wouldn't do you any good!"
            endif
            
        else if nr = key
            if spot & house
                msg "you got home! yay!"
                quitting = true
            else
                msg "that wouldn't do you any good!"
            endif
        endif
    else
        msg "you don't have that!"
    endif
return

sub tryget(thing:char*)
    def nr:int
    nr = getthingnr(thing)
    if map[myy, myx] & nr
        inv = inv | nr
        map[myy, myx] = map[myy, myx] - nr
        messages[myy, myx] = "there's nothing here anymore cause you took it."
        msg "oh you totally got it"
    else
        msg "it's not here!"
    endif
return

sub help
    msg "try north/south/east/west, look, get/take <item>, use <item>"
return

sub inventory
    if inv = 0
        msg "your inventory is empty!"
        return
    endif
    
    msg "you have:"
    if inv & lantern then msg("- lantern")
    if inv & cake then msg("- cake")
    if inv & money then msg("- money")
    if inv & tissues then msg("- tissues")
    if inv & key then msg("- key")
return

''-----------

sub setupmap
    map[0,0] = pitofspikes
    map[0,2] = hungryguy
    map[1,0] = lantern
    map[1,3] = dark | cake
    map[2,2] = cryingguy
    map[3,1] = house
    map[3,3] = store
return

sub setupmessages
    messages[0,0] = "you got impaled by a pit of spikes."
    messages[0,1] = "there's nothing here."
    messages[0,2] = "there's a hungry looking dude here."
    messages[0,3] = "there's nothing here."
    
    messages[1,0] = "looks like there's a lantern here."
    messages[1,1] = _
        "you should really be getting home. where'd you leave your keys again?"
    messages[1,2] = "it's boring here."
    messages[1,3] = "there's an awesome looking cake here."
    
    messages[2,0] = "nothing to do here."
    messages[2,1] = "not a single thing here."
    messages[2,2] = "there's a dude crying some dudely tears here."
    messages[2,3] = "absolutely nothing here."
    
    messages[3,0] = "support GlazBasic. http://github.com/parkovski."
    messages[3,1] = "it's your house! too bad it's locked..."
    messages[3,2] = "nothing here."
    messages[3,3] = "there's a store here! they only sell tissues."
    
    ''-----
    
    lookmsg[0,0] = "looks ominous."
    lookmsg[0,1] = "looks pretty empty."
    lookmsg[0,2] = "there's somebody there."
    lookmsg[0,3] = "looks pretty empty."
    
    lookmsg[1,0] = "there's something on the ground."
    lookmsg[1,1] = "looks pretty empty."
    lookmsg[1,2] = "looks pretty empty."
    lookmsg[1,3] = "smells nice."
    
    lookmsg[2,0] = "looks pretty empty."
    lookmsg[2,1] = "looks pretty empty."
    lookmsg[2,2] = "you hear strange noises."
    lookmsg[2,3] = "looks pretty empty."
    
    lookmsg[3,0] = "looks like a nice opportunity."
    lookmsg[3,1] = "is your house."
    lookmsg[3,2] = "looks pretty empty."
    lookmsg[3,3] = "there's a large building."
return

''-----------

sub gonorth
    if myy = 0
        msg "you can't go north!"
        return
    endif
    myy = myy - 1
return

sub gosouth
    if myy = ymax
        msg "you can't go south!"
        return
    endif
    myy = myy + 1
return

sub gowest
    if myx = 0
        msg "you can't go west!"
        return
    endif
    myx = myx - 1
return

sub goeast
    if myx = xmax
        msg "you can't go east!"
        return
    endif
    myx = myx + 1
return

